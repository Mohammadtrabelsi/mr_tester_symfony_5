type Annonce implements Node {
  id: ID!
  _id: Int!
  title: String!
  content: String!
  categories: Category!
}

"""Connection for Annonce."""
type AnnonceConnection {
  edges: [AnnonceEdge]
  pageInfo: AnnoncePageInfo!
  totalCount: Int!
}

"""Edge of Annonce."""
type AnnonceEdge {
  node: Annonce
  cursor: String!
}

"""Information about the current page."""
type AnnoncePageInfo {
  endCursor: String
  startCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Category implements Node {
  id: ID!
  _id: Int!
  name: String!
  slug: String!
  annonces(
    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): AnnonceConnection
}

type Mutation {
  """Deletes a Annonce."""
  deleteAnnonce(input: deleteAnnonceInput!): deleteAnnoncePayload

  """Updates a Annonce."""
  updateAnnonce(input: updateAnnonceInput!): updateAnnoncePayload

  """Creates a Annonce."""
  createAnnonce(input: createAnnonceInput!): createAnnoncePayload

  """CollectionQuerys a Category."""
  collectionQueryCategory(input: collectionQueryCategoryInput!): collectionQueryCategoryPayload

  """Deletes a Category."""
  deleteCategory(input: deleteCategoryInput!): deleteCategoryPayload

  """Updates a Category."""
  updateCategory(input: updateCategoryInput!): updateCategoryPayload

  """Creates a Category."""
  createCategory(input: createCategoryInput!): createCategoryPayload
}

"""A node, according to the Relay specification."""
interface Node {
  """The id of this node."""
  id: ID!
}

type Query {
  node(id: ID!): Node
  annonce(id: ID!): Annonce
  annonces(
    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): AnnonceConnection
  retrievedQueryCategory(shearch: String!): Category
  category(id: ID!): Category
  categories: [Category]
}

input collectionQueryCategoryInput {
  shearch: String!
  clientMutationId: String
}

type collectionQueryCategoryPayload {
  category: Category
  clientMutationId: String
}

input createAnnonceInput {
  title: String!
  content: String!
  categories: String!
  clientMutationId: String
}

type createAnnoncePayload {
  annonce: Annonce
  clientMutationId: String
}

input createCategoryInput {
  name: String!
  slug: String!
  annonces: [String]
  clientMutationId: String
}

type createCategoryPayload {
  category: Category
  clientMutationId: String
}

input deleteAnnonceInput {
  id: ID!
  clientMutationId: String
}

type deleteAnnoncePayload {
  annonce: Annonce
  clientMutationId: String
}

input deleteCategoryInput {
  id: ID!
  clientMutationId: String
}

type deleteCategoryPayload {
  category: Category
  clientMutationId: String
}

input updateAnnonceInput {
  id: ID!
  title: String
  content: String
  categories: String
  clientMutationId: String
}

type updateAnnoncePayload {
  annonce: Annonce
  clientMutationId: String
}

input updateCategoryInput {
  id: ID!
  name: String
  slug: String
  annonces: [String]
  clientMutationId: String
}

type updateCategoryPayload {
  category: Category
  clientMutationId: String
}
